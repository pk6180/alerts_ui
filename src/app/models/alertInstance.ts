/**
 * equipment/find-equipment-alerts/1.0
 * As part of the derailment prevention the WDI Wayside detection Integration team  created alerts using sensor data from various wayside detectors and locomotive  onboard detectors. These alerts are used by various teams to prevent derailments  and fix mechanical defects in repair shops. This service is used to retrieve alerts  generated by the WDI CLIPS defect rules engine. The service accepts various selectors in the request and returns alerts that match the request selectors from the system.
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { TrainIdentification } from './trainIdentification';

/**
 * The alert instance object
 */
export interface AlertInstance { 
    /**
     * Data base unique instance id
     */
    alertHistoryId?: number;
    /**
     * The alert status as in O->Open, C->Closed, D->Deleted, I->Ignore
     */
    status?: AlertInstance.StatusEnum;
    /**
     * The alert definition status
     */
    definitionStatus?: AlertInstance.DefinitionStatusEnum;
    /**
     * Alert occurrence date
     */
    occurrenceDateTime?: string;
    /**
     * The alert symptom reason the alert was created
     */
    symptom?: string;
    /**
     * The alert action text that give the recommendation on course of action to be taken  to correct the problem
     */
    actionText?: string;
    /**
     * Alert closed date
     */
    closedDateTime?: string;
    /**
     * The close reason code why alert was closed
     */
    closeReasonId?: number;
    /**
     * The reason why alert was closed
     */
    closeReason?: string;
    /**
     * The reason why alert was closed
     */
    resultText?: string;
    /**
     * The identifier for last sensor data
     */
    sensorDataIdentification?: string;
    /**
     * Alert sensor data reading
     */
    sensorDataIdentificationDateTime?: string;
    /**
     * The alert severity
     */
    alertSeverity?: AlertInstance.AlertSeverityEnum;
    /**
     * The alert class along with the alert rank define the escalation hiererchy the alert with higher rank survives with in the same class. There are a few hundred alert clases defined in WDI. Contact mdds@up.com if you need assistance. More details can be found on the Wiki  http://wiki.www.uprr.com/confluence/pages/viewpage.action?pageId=152476413
     */
    alertClass?: string;
    /**
     * The alert class along with the alert rank define the escalation hiererchy the alert with higher rank survives with in the same class.
     */
    alertRank?: number;
    currentTrainId?: TrainIdentification;
    /**
     * The location of sensor reading that caused the alert to be created
     */
    locationCirc7?: string;
    /**
     * The alert severity type for locomotive alerts
     */
    alertSeverityType?: AlertInstance.AlertSeverityTypeEnum;
    /**
     * The alert severity code for locomotive alerts
     */
    alertSeverityCode?: AlertInstance.AlertSeverityCodeEnum;
    /**
     * The alert severity color for locomotive alerts
     */
    alertSeverityColor?: AlertInstance.AlertSeverityColorEnum;
    /**
     * Equipment Sequence on Train
     */
    equipmentSequenceOnTrain?: number;
    /**
     * Orientation A or B or U->Unknown
     */
    equipmentOrientation?: AlertInstance.EquipmentOrientationEnum;
    /**
     * Truck Sequence on Train
     */
    truckSequenceOnTrain?: number;
    /**
     * Truck Identification on equipment or unknown Possible values A through Z and more like AA AB etc.
     */
    truckId?: string;
    /**
     * Axle Sequence on Train
     */
    axleSequenceOnTrain?: number;
    /**
     * Axle Sequence on Equipment
     */
    axleSequenceOnEquipment?: number;
    /**
     * Train side L/R
     */
    trainSide?: AlertInstance.TrainSideEnum;
    /**
     * Equipment side L/R
     */
    equipmentSide?: string;
    /**
     * Alert effective date time. Used for Early Warnings and Problem Logs to indicate when an action should be taken
     */
    effectiveDateTime?: string;
    /**
     * Alert expiration date. Used for Early Warnings and Problem Logs to indicate recommended date for action to be completed
     */
    expirationDate?: string;
}
export namespace AlertInstance {
    export type StatusEnum = 'O' | 'C' | 'D' | 'I';
    export const StatusEnum = {
        O: 'O' as StatusEnum,
        C: 'C' as StatusEnum,
        D: 'D' as StatusEnum,
        I: 'I' as StatusEnum
    };
    export type DefinitionStatusEnum = 'PRODUCTION' | 'VERIFICATION' | 'NEW';
    export const DefinitionStatusEnum = {
        PRODUCTION: 'PRODUCTION' as DefinitionStatusEnum,
        VERIFICATION: 'VERIFICATION' as DefinitionStatusEnum,
        NEW: 'NEW' as DefinitionStatusEnum
    };
    export type AlertSeverityEnum = 'VERY_CRITICAL' | 'CRITICAL' | 'MODERATE' | 'MINOR' | 'VERY_MINOR' | 'A1' | 'A2' | 'A3' | 'A4' | 'A5' | 'A6' | 'A7' | 'A8' | 'A9' | 'XX';
    export const AlertSeverityEnum = {
        VERYCRITICAL: 'VERY_CRITICAL' as AlertSeverityEnum,
        CRITICAL: 'CRITICAL' as AlertSeverityEnum,
        MODERATE: 'MODERATE' as AlertSeverityEnum,
        MINOR: 'MINOR' as AlertSeverityEnum,
        VERYMINOR: 'VERY_MINOR' as AlertSeverityEnum,
        A1: 'A1' as AlertSeverityEnum,
        A2: 'A2' as AlertSeverityEnum,
        A3: 'A3' as AlertSeverityEnum,
        A4: 'A4' as AlertSeverityEnum,
        A5: 'A5' as AlertSeverityEnum,
        A6: 'A6' as AlertSeverityEnum,
        A7: 'A7' as AlertSeverityEnum,
        A8: 'A8' as AlertSeverityEnum,
        A9: 'A9' as AlertSeverityEnum,
        XX: 'XX' as AlertSeverityEnum
    };
    export type AlertSeverityTypeEnum = 'MCS' | 'EW' | 'AAR' | 'EA';
    export const AlertSeverityTypeEnum = {
        MCS: 'MCS' as AlertSeverityTypeEnum,
        EW: 'EW' as AlertSeverityTypeEnum,
        AAR: 'AAR' as AlertSeverityTypeEnum,
        EA: 'EA' as AlertSeverityTypeEnum
    };
    export type AlertSeverityCodeEnum = 'VERY_CRITICAL' | 'CRITICAL' | 'MODERATE' | 'MINOR' | 'VERY_MINOR' | 'A1' | 'A2' | 'A3' | 'A4' | 'A5' | 'A6' | 'A7' | 'A8' | 'A9' | 'XX';
    export const AlertSeverityCodeEnum = {
        VERYCRITICAL: 'VERY_CRITICAL' as AlertSeverityCodeEnum,
        CRITICAL: 'CRITICAL' as AlertSeverityCodeEnum,
        MODERATE: 'MODERATE' as AlertSeverityCodeEnum,
        MINOR: 'MINOR' as AlertSeverityCodeEnum,
        VERYMINOR: 'VERY_MINOR' as AlertSeverityCodeEnum,
        A1: 'A1' as AlertSeverityCodeEnum,
        A2: 'A2' as AlertSeverityCodeEnum,
        A3: 'A3' as AlertSeverityCodeEnum,
        A4: 'A4' as AlertSeverityCodeEnum,
        A5: 'A5' as AlertSeverityCodeEnum,
        A6: 'A6' as AlertSeverityCodeEnum,
        A7: 'A7' as AlertSeverityCodeEnum,
        A8: 'A8' as AlertSeverityCodeEnum,
        A9: 'A9' as AlertSeverityCodeEnum,
        XX: 'XX' as AlertSeverityCodeEnum
    };
    export type AlertSeverityColorEnum = 'RED' | 'GREEN' | 'ORANGE' | 'YELLOW' | 'BLUE';
    export const AlertSeverityColorEnum = {
        RED: 'RED' as AlertSeverityColorEnum,
        GREEN: 'GREEN' as AlertSeverityColorEnum,
        ORANGE: 'ORANGE' as AlertSeverityColorEnum,
        YELLOW: 'YELLOW' as AlertSeverityColorEnum,
        BLUE: 'BLUE' as AlertSeverityColorEnum
    };
    export type EquipmentOrientationEnum = 'A' | 'B' | 'U';
    export const EquipmentOrientationEnum = {
        A: 'A' as EquipmentOrientationEnum,
        B: 'B' as EquipmentOrientationEnum,
        U: 'U' as EquipmentOrientationEnum
    };
    export type TrainSideEnum = 'L' | 'R';
    export const TrainSideEnum = {
        L: 'L' as TrainSideEnum,
        R: 'R' as TrainSideEnum
    };
}